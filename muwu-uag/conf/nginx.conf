worker_processes  2;
error_log  logs/error.log  info;
events {
    worker_connections  1024;
}
http {
    default_type  application/octet-stream;
    lua_code_cache on;
    lua_shared_dict config 10m;
    include       mime.types;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
    lua_package_path 'openResty/?.lua;;./?.lua;';
    init_by_lua_file 'openResty/init.lua';
    include 'upstream.conf';

    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Real-IP       $remote_addr;
    proxy_set_header    REMOTE-HOST     $remote_addr;
    proxy_set_header    Host            $host;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

    server {
        listen       80;
        server_name  localhost;
        default_type text/html;
        proxy_set_header Host $http_host;

        set $client_id "muwu-client-auth";
        set $client_secret "muwuClientSecret";

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location / {
            root 'E:\\idea-workspace\\fanmu\\muwu-admin\\dist';
            index index.html;
        }

        location /muwu-auth {
            default_type text/plain;
            access_by_lua_file openResty/platform/auth.lua;
            proxy_pass http://muwu-auth;
        }

        location /muwu-auth/auth/code/ {
            default_type text/plain;
            proxy_pass http://muwu-auth;
        }

        location /muwu-auth/oauth2/authorization/ {
            default_type text/plain;
            proxy_pass http://muwu-auth;
        }

        location /muwu-auth/login/oauth2/code/ {
            default_type text/plain;
            proxy_pass http://muwu-auth;
        }

        location /muwu-auth/auth/form {
            access_by_lua_block {
                local common = require("common.common");
                local authorization = common.get_authorization_value();
                ngx.log(ngx.INFO, "authorization: " .. authorization);
                ngx.req.set_header("Authorization", authorization);
            }
            proxy_pass http://muwu-auth;
        }

        location /muwu-auth/auth/social {
            access_by_lua_block {
                local common = require("common.common");
                local authorization = common.get_authorization_value();
                ngx.log(ngx.INFO, "authorization: " .. authorization);
                ngx.req.set_header("Authorization", authorization);
            }
            proxy_pass http://muwu-auth;
        }

        location /muwu-web-api {
            default_type text/plain;
            access_by_lua_file openResty/platform/auth.lua;
            proxy_pass http://muwu-web-api;
        }

        location /pinpoint-web {
            default_type text/plain;
            # access_by_lua_file /opt/openresty/lua/platform/auth.lua;
            proxy_pass http://pinpoint;
        }

        location /jquery {
            proxy_pass   https://libs.baidu.com;
        }
    }
}